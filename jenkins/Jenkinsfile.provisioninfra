pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-jenkins-creds')
        AWS_SECRET_ACCESS_KEY = credentials('aws-jenkins-creds')
        AWS_DEFAULT_REGION    = 'eu-central-1'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/giotsintsadze/fullstack-devops-infra'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('terraform/environments/dev') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('terraform/environments/dev') {
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('terraform/environments/dev') {
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }

        stage('Deploy Application') {
            steps {
                dir('ansible') {
                    script {
                        def appIp = sh(
                            script: 'cd ../terraform/environments/dev && terraform output -raw app_server_public_ip',
                            returnStdout: true
                        ).trim()

                        withCredentials([file(credentialsId: 'aws-private-key', variable: 'SSH_KEY_FILE')]) {
                            ansiblePlaybook(
                                playbook: 'deploy-app.yml',
                                inventory: 'inventory.yml',
                                extras: "-e ansible_ssh_private_key_file=${SSH_KEY_FILE} -e app_server_ip=${appIp} -e docker_user=${DOCKER_HUB_CREDENTIALS_USR} -e docker_pass=${DOCKER_HUB_CREDENTIALS_PSW}"
                            )
                        }
                    }
                }
            }
        }


    }
}
